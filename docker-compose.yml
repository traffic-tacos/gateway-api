version: '3.8'

services:
  # API Gateway
  gateway-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - UPSTREAM_RESERVATION_BASE=http://reservation-api:8080
      - UPSTREAM_PAYMENT_BASE=http://payment-sim-api:8080
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - REDIS_TLS=false
      - JWT_ISSUER=https://dev-auth.tickets.example.com
      - JWT_AUDIENCE=tickets-api
      - JWT_JWKS_URL=https://dev-auth.tickets.example.com/.well-known/jwks.json
      - JWT_SKIP_VERIFY=true
      - RATE_LIMIT_RPS=50
      - RATE_LIMIT_BURST=100
      - IDEMPOTENCY_TTL_SECONDS=300
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - SERVICE_NAME=gateway-api
      - SERVICE_VERSION=1.0.0-dev
      - TRACE_SAMPLING=0.1
      - LOG_LEVEL=debug
    depends_on:
      - redis
    networks:
      - traffic-tacos
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - traffic-tacos
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Mock Reservation API (for development)
  reservation-api:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./mocks/reservation-api:/usr/share/nginx/html
    networks:
      - traffic-tacos
    restart: unless-stopped

  # Mock Payment API (for development)
  payment-sim-api:
    image: nginx:alpine
    ports:
      - "8082:80"
    volumes:
      - ./mocks/payment-api:/usr/share/nginx/html
    networks:
      - traffic-tacos
    restart: unless-stopped

  # OpenTelemetry Collector (optional)
  otel-collector:
    image: otel/opentelemetry-collector:latest
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "55679:55679" # Prometheus metrics
    volumes:
      - ./otel-config.yml:/etc/otel/config.yaml
    command: ["--config=/etc/otel/config.yaml"]
    networks:
      - traffic-tacos
    restart: unless-stopped

volumes:
  redis_data:

networks:
  traffic-tacos:
    driver: bridge
