basePath: /api/v1
definitions:
  routes.EnterQueueRequest:
    properties:
      waiting_token:
        type: string
    required:
    - waiting_token
    type: object
  routes.EnterQueueResponse:
    properties:
      admission:
        description: granted|denied
        type: string
      reservation_token:
        type: string
      ttl_sec:
        type: integer
    type: object
  routes.JoinQueueRequest:
    properties:
      event_id:
        type: string
      user_id:
        type: string
    required:
    - event_id
    type: object
  routes.JoinQueueResponse:
    properties:
      position_hint:
        type: integer
      status:
        type: string
      waiting_token:
        type: string
    type: object
  routes.QueueStatusResponse:
    properties:
      eta_sec:
        description: Estimated time to admission
        type: integer
      position:
        description: Current position in queue
        type: integer
      status:
        description: waiting|ready|expired
        type: string
      waiting_time:
        description: Time already waited in seconds
        type: integer
    type: object
  routes.ReservationResponse:
    properties:
      event_id:
        type: string
      quantity:
        type: integer
      reservation_id:
        type: string
      seat_ids:
        items:
          type: string
        type: array
      status:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: High-performance BFF for Traffic Tacos ticket reservation system
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gateway API
  version: "1.0"
paths:
  /healthz:
    get:
      description: Check if the service is healthy
      produces:
      - application/json
      responses:
        "200":
          description: Healthy
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - System
  /queue/enter:
    post:
      consumes:
      - application/json
      description: Request entrance to the main system after waiting in queue
      parameters:
      - description: Enter queue request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/routes.EnterQueueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.EnterQueueResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Not ready for entrance
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Token not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties: true
            type: object
      summary: Request queue entrance
      tags:
      - Queue
  /queue/join:
    post:
      consumes:
      - application/json
      description: Join the waiting queue for an event
      parameters:
      - description: Join queue request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/routes.JoinQueueRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/routes.JoinQueueResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties: true
            type: object
      summary: Join waiting queue
      tags:
      - Queue
  /queue/leave:
    delete:
      description: Leave the waiting queue voluntarily
      parameters:
      - description: Waiting token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
      summary: Leave waiting queue
      tags:
      - Queue
  /queue/status:
    get:
      description: Check the current status of a waiting token in the queue
      parameters:
      - description: Waiting token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.QueueStatusResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Token not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties: true
            type: object
      summary: Check queue status
      tags:
      - Queue
  /readyz:
    get:
      description: Check if the service is ready to accept traffic
      produces:
      - application/json
      responses:
        "200":
          description: Ready
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Not ready
          schema:
            additionalProperties: true
            type: object
      summary: Readiness check
      tags:
      - System
  /reservations/{id}:
    get:
      description: Retrieve details of a specific reservation
      parameters:
      - description: Reservation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.ReservationResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get reservation details
      tags:
      - Reservations
  /reservations/{id}/cancel:
    post:
      description: Cancel an existing reservation and release the seats
      parameters:
      - description: Idempotency key (UUID v4)
        in: header
        name: Idempotency-Key
        type: string
      - description: Reservation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Cancel a reservation
      tags:
      - Reservations
  /version:
    get:
      description: Get service version and build information
      produces:
      - application/json
      responses:
        "200":
          description: Version info
          schema:
            additionalProperties: true
            type: object
      summary: Version information
      tags:
      - System
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
