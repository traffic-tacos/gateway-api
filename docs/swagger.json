{
    "swagger": "2.0",
    "info": {
        "description": "High-performance BFF for Traffic Tacos ticket reservation system",
        "title": "Gateway API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/healthz": {
            "get": {
                "description": "Check if the service is healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/queue/enter": {
            "post": {
                "description": "Request entrance to the main system after waiting in queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Request queue entrance",
                "parameters": [
                    {
                        "description": "Enter queue request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.EnterQueueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.EnterQueueResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Not ready for entrance",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/queue/join": {
            "post": {
                "description": "Join the waiting queue for an event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Join waiting queue",
                "parameters": [
                    {
                        "description": "Join queue request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.JoinQueueRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/routes.JoinQueueResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/queue/leave": {
            "delete": {
                "description": "Leave the waiting queue voluntarily",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Leave waiting queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Waiting token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/queue/status": {
            "get": {
                "description": "Check the current status of a waiting token in the queue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Check queue status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Waiting token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.QueueStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "Check if the service is ready to accept traffic",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Readiness check",
                "responses": {
                    "200": {
                        "description": "Ready",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Not ready",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/reservations/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve details of a specific reservation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservation details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reservation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ReservationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/reservations/{id}/cancel": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Cancel an existing reservation and release the seats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservations"
                ],
                "summary": "Cancel a reservation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Idempotency key (UUID v4)",
                        "name": "Idempotency-Key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Reservation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get service version and build information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Version information",
                "responses": {
                    "200": {
                        "description": "Version info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "routes.EnterQueueRequest": {
            "type": "object",
            "required": [
                "waiting_token"
            ],
            "properties": {
                "waiting_token": {
                    "type": "string"
                }
            }
        },
        "routes.EnterQueueResponse": {
            "type": "object",
            "properties": {
                "admission": {
                    "description": "granted|denied",
                    "type": "string"
                },
                "reservation_token": {
                    "type": "string"
                },
                "ttl_sec": {
                    "type": "integer"
                }
            }
        },
        "routes.JoinQueueRequest": {
            "type": "object",
            "required": [
                "event_id"
            ],
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "routes.JoinQueueResponse": {
            "type": "object",
            "properties": {
                "position_hint": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "waiting_token": {
                    "type": "string"
                }
            }
        },
        "routes.QueueStatusResponse": {
            "type": "object",
            "properties": {
                "eta_sec": {
                    "description": "Estimated time to admission",
                    "type": "integer"
                },
                "position": {
                    "description": "Current position in queue",
                    "type": "integer"
                },
                "status": {
                    "description": "waiting|ready|expired",
                    "type": "string"
                },
                "waiting_time": {
                    "description": "Time already waited in seconds",
                    "type": "integer"
                }
            }
        },
        "routes.ReservationResponse": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "reservation_id": {
                    "type": "string"
                },
                "seat_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}